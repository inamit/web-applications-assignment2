openapi: 3.0.3
info:
  title: Assignment
  description: |-
    The API manages Posts, Comments and Users
  version: 1.0.0
servers:
  - url: https://localhost:3000
tags:
  - name: Post
    description: Manage posts
  - name: Comment
    description: Manage comments
paths:
  /posts:
    get:
      tags:
        - Post
      summary: Get all posts
      description: Get all posts from the database
      operationId: getAllPosts
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
    post:
      tags:
        - Post
      summary: Add a new post
      description: Add a new post
      operationId: addPost
      requestBody:
        description: Create a new post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /posts/{postId}:
    get:
      tags:
        - Post
      summary: Get post by postID
      description: Returns a single post
      operationId: getPostByID
      parameters:
        - name: postId
          in: path
          description: ID of post to return
          required: true
          schema:
            type: string
            minLength: 24
            maxLength: 24
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
    put:
      tags:
        - Post
      summary: Updates the entire post with form data
      operationId: updatePost
      parameters:
        - name: postId
          in: path
          description: ID of post to return
          required: true
          schema:
            type: string
            minLength: 24
            maxLength: 24
      requestBody:
        description: Post updated data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Missing required parameters
        '404':
          description: Post not found
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /comments:
    get:
      tags:
        - Comment
      summary: Get all comments
      description: Get all comments from the database
      operationId: getAllComments
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
    post:
      tags:
        - Comment
      summary: Add a new comment
      description: Add a new comment
      operationId: addComment
      parameters:
        - name: postId
          in: query
          description: ID of the post to add the comment to
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new comment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Post not found
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /comments/{commentId}:
    delete:
      tags:
        - Comment
      summary: Delete comment by ID
      description: Deletes a comment
      operationId: deleteCommentByID
      parameters:
        - name: commentId
          in: path
          description: ID of comment to delete
          required: true
          schema:
            type: string
            minLength: 24
            maxLength: 24
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
    put:
      tags:
        - Comment
      summary: Updates the entire comment with form data
      operationId: updateComment
      parameters:
        - name: commentId
          in: path
          description: ID of post to return
          required: true
          schema:
            type: string
            minLength: 24
            maxLength: 24
      requestBody:
        description: Comment updated data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Missing required parameters
        '404':
          description: Post not found
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'        

components:
  schemas:
    Post:
      type: object
      properties:
        _id:
          type: string
          minLength: 24
          maxLength: 24
        content:
          type: string
        sender:
          type: string
        __v:
          type: integer
    PostInput:
      type: object
      required: ["content", "sender"]
      properties:
        content:
          type: string
        sender:
          type: string
    Comment:
      type: object
      properties:
        _id:
          type: string
          minLength: 24
          maxLength: 24
        postID:
          type: string
          minLength: 24
          maxLength: 24
        content:
          type: string
        sender:
          type: string
        __v:
          type: integer
    CommentInput:
      type: object
      required: ["content", "sender"]
      properties:
        content:
          type: string
        sender:
          type: string
    Error:
      type: object
      properties:
        error:
          type: string
    UnexpectedError:
      type: object
      properties:
        error: 
          type: string
          example: 'An error occurred.'
  requestBodies:
    Post:
      description: Post object input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostInput'
    Comment:
      description: Comment object input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommentInput'